/*hyphen to separate words; 2 underscores (i.e., __) to separate a block from its elements; 2 hyphens (i.e., --) to separate struxture from skin*/


/*Defining color palette*/
:root {
    --color-primary: #2584ff;
    --color-secondary: #00d9ff;
    --color-accent: #ff3400;
    --color-headings: #1b0760;
    --color-body: #918ca4;
    --color-body-darker: #5c5577;
    --color-border: #ccc;
    --border-radius: 30px;
}

*, *::after, *::before {
   box-sizing: border-box;
}

::selection {
   background: var(--color-primary);
   color: #fff; 
}

/*Typography*/
html {
    /*Default is 16px. So, 62.5% of 16px = 10px */
    font-size: 62.5%;
}

body {
    font-family: Inter, Arial, Helvetica, sans-serif;
    font-size: 2.4rem;
    /*line height 1.5 means 1.5 * font-size*/
    line-height: 1.5;
    color: var(--color-body);
    padding: 3rem;
}

h1, h2, h3 {
    color: var(--color-headings);
    margin-bottom: 1rem;
    line-height: 1.1;
}

h1 {
    /*1rem = 1 x font size of the html element*/
    font-size: 7rem;
}

h2 {
    font-size: 4rem;;
}

h3 {
    font-size: 3rem;
    font-weight: 500;
}

p {
    margin-top: 0;
}

@media screen and (min-width: 1024px) {

    body {
        font-size: 1.8rem;
    }

    h1 {
        font-size: 8rem;
    }

    h2 {
        font-size: 4rem;
    }

    h3 {
        font-size: 2.4rem;
    }
}


/*Links*/
a {
    text-decoration: none;
}

.link-arrow {
    color: var(--color-accent);
    text-transform: uppercase;
    font-size: 2rem;
    font-weight: bold;
}

/*adding an arrow symbol*/
.link-arrow::after {
    content: "-->";
    margin-left: 5px;
    transition: margin 0.20s;
}

.link-arrow:hover::after {
    margin-left: 10px;
}

@media screen and (min-width: 1024px) {

    .link-arrow {
        font-size: 1.5rem;
    }
}


/*Badges*/

.badge {
    border-radius: 20px;
    font-size: 2rem;
    font-weight: 600;
    padding: 0.5rem 2rem;
    /*preventing the badge from wrapping to a new line*/
    white-space: nowrap;
}

/*naming convetion to separate structure (i.e., badge) from skin (i.e., badge with a type of color)*/
.badge--primary {
    background: var(--color-primary);
    color: white;
}

.badge--secondary {
    background: var(--color-secondary);
    color: white;
}

.badge--small {
    font-size: 1.6rem;
    padding: 0.5rem 1.5rem;
}

@media screen and (min-width: 1024px) {

    .badge {
        font-size: 1.5rem;
    }

    .badge--small {
        font-size: 1.2rem;
    }
}


/*Lists*/

.list {
    /*to get rid of default bullet point*/
    list-style: none; 
    padding-left: 0;
}

.list--inline .list__item {
   display: inline-block;
   margin-right: 2rem;
}

.list--tick {
    list-style-image: url(../images/tick.svg);
    /*to bring them back to the screen*/
    padding-left: 3rem;
    color: var(--color-headings);
}

/*if you have a list with the class of "list--tick" the list__item should be designed as follows*/
.list--tick .list__item {
    padding-left: 0.5rem;
    margin-bottom: 1rem;
}

@media screen and (min-width: 1024px) {

    .list--tick .list__item {
        padding-left: 0;
    }
}


/*Icons*/
    /*Note - combine all svg icons into a Sprite using sprite generator to reduce number of http requests*/
.icon {
    width: 40px;
    height: 40px;
}

.icon--small {
    width: 30px;
    height: 30px;
}

.icon--primary {
    /*use FILL property for svg images*/
    fill: var(--color-primary);
}

.icon--white {
    /*use FILL property for svg images*/
    fill: #fff;
}

.icon-container {
    background: #f3f9fa;
    width: 64px;
    height: 64px;
    border-radius: 100%;
    /*to allow icon to be aligned in the center of container*/
    display: inline-flex; 
    /*to align icon along horizontal axis*/
    justify-content: center;
    /*to align icon along vertical axis*/
    align-items: center;
}

.icon-container--accent {
    background: var(--color-accent)
}

/*Buttons*/

.btn {
    border-radius: 40px;
    border: 0;
    /*to show a "hand when hovering on a button*/
    cursor: pointer;
    font-size: 1.8rem;
    font-weight: 600;
    margin: 1rem 0;
    outline: 0;
    padding: 2rem 4vw;
    text-align: center;
    text-transform: uppercase;
    white-space: nowrap;
}

.btn .icon {
    width: 2rem;
    height: 2rem;
    margin-right: 1rem;
    /*place icon in the center (vertically)*/
    vertical-align: middle;
}

.btn--primary {
    background: var(--color-primary);
    color: #fff;
}

.btn--primary:hover {
    background: burlywood;
}

.btn--secondary {
    background: var(--color-secondary);
    color: #fff;
}

.btn--secondary:hover {
    background: blueviolet;
}

.btn--accent {
    background: var(--color-accent);
    color: #fff;
}

.btn--accent:hover {
    background: orange;
}

.btn--outline {
    border: 3px solid var(--color-headings);
    color: var(--color-headings);
    background: #fff;
}

.btn--outline:hover {
    background: var(--color-headings);
    color: #fff;
}

.btn--block {
    width: 100%;
    display: inline-block;
}

.btn--stretched {
    padding-left: 6rem;
    padding-right: 6rem;
}

@media screen and (min-width: 1024px) {

    .btn {
        font-size: 1.5rem;
    }
}


/*Inputs*/
.input {
    padding: 1.5rem 3.5rem;
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius);
    /*to remove outline around border*/
    outline: 0;
    color: var(--color-headings);
    font-size: 2rem;
}

::placeholder {
    color: #cdcbd7;
}

.input-group {
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius);
    display: flex;
}

.input-group .input {
    border: 0;
    /*push button to the right (i.e., get input to take all available space)*/
    flex-grow: 1;
    padding: 1.5rem 2rem;
    width: 0;
}

.input-group .btn {
    margin: 4px;
}

@media screen and (min-width: 1024px) {

    .input {
        font-size: 1.5rem;
    }
}


/*Cards*/

.card {
    border-radius: 10px;
    /*box-shadow: horizontal_offset vertical_offset blurring spreading color*/
    box-shadow: 0 0 20px #f3f3f3;
    overflow: hidden;
}

.card__header, .card__body {
    padding: 2rem 3rem;
}

.card--primary .card__header {
    background: var(--color-primary);
    color: #fff;
}

.card--secondary .card__header {
    background: var(--color-secondary);
    color: #fff;
}

.card--primary .badge--primary {
    background: #126de4;
}

/*if there's a secondary badge inside a secondary card, do the following to avoid colors blending*/
.card--secondary .badge--secondary {
    background: #02cdf1;
}

@media screen and (min-width: 500px) {

    .card {
        overflow: visible;
    }
    
}


/*Plans*/
.plan {
    transition: transform .2s ease-out;
}

.plan__name {
    color: #fff;
    margin: 0;
    font-weight: 500;
    font-size: 2.4rem;
}

.plan__price {
    font-size: 6rem;
}

.plan__billing-cycle {
    font-weight: 300;
    font-size: 2.4rem;
    /*opacity is used to make component softer*/
    opacity: 0.8;
    margin-right: 1rem;
}

.plan__description {
    font-weight: 300;
    font-size: 2rem;
    letter-spacing: 1px;
    display: block;
}

.plan .list__item {
    margin-bottom: 2rem;
    letter-spacing: 1px;
}


/*Popular Badge*/
.plan--popular {
    transform: scale(1.1);
}

.plan--popular .card__header {
    /*make the parent element of popular badge to be relative*/
    position: relative;
}

.plan--popular .card__header::before {
    content: url(../images/popular.svg);
    width: 50px;
    /*set display as seen below so the width works since this is an inline element*/
    display: inline-block;
    /*use absolute positioning to move it to desired location. to do this make the parent element (i.e., card__header) to be relative*/
    position: absolute;
    top: -7px;
    right: 5%;
}

.plan:hover {
    transform: scale(1.05);
}

.plan--popular:hover {
    transform: scale(1.15);
}

/*Plans continued*/
@media screen and (min-width: 1024px) {

    .plan__name {
        font-size: 1.4rem;
    }
    
    .plan__price {
        font-size: 5rem;
    }
    
    .plan__billing-cycle {
        font-size: 1.6rem;
    }
    
    .plan__description {
        font-size: 1.7rem;
    }
    
}


/*Media*/
.media {
    display: flex;
    margin-bottom: 4rem;
}

.media__title {
    margin-top: 0;
}

.media__body {
    margin: 0 2rem;
}

.media__image {
    margin-top: 1rem;
}


/*Quotes*/
.quote {
    font-size: 3rem;
    font-style: italic;
    color: var(--color-body-darker);
    line-height: 1.3;
}

.quote__text::before {
    /*open quotation marks*/
    content: open-quote;
}

.quote__text::after {
    /*close quotation marks*/
    content: close-quote;
}

.quote__author {
    font-size: 3rem;
    font-style: normal;
    font-weight: 500;
    margin-bottom: 0;
}

.quote__organization {
    color: var(--color-headings);
    font-size: 2rem;
    font-style: normal;
    font-weight: 400;
    opacity: 0.4;
}

.quote__line {
    position: relative;
    bottom: 10px;
}

@media screen and (min-width: 1024px) {

    .quote {
        font-size: 2rem;
    }
    
    .quote__author {
        font-size: 2.4rem;
    }
    
    .quote__organization {
        font-size: 1.6rem;
    }
    
}


/*Grids*/
.grid {
    display: grid;
}

@media screen and (min-width: 768px) {

    /*1 row 2 columns*/
    .grid--1x2 {
        /*take all the available space and divide by 2*/
        grid-template-columns: 1fr 1fr;
    }
    
}

@media screen and (min-width: 1024px) {

    /*1 row 3 columns*/
    .grid--1x3 {
        /*take all the available space and divide by 3*/
        grid-template-columns: repeat(3, 1fr);
    }
    
}

/*Testimonials*/
.testimonial {
    padding: 3rem;
}

.testimonial__image-container {
    position: relative;
}

.testimonial__image {
    /*make the image responsive to 100% of its container*/
    width: 100%;
}

.testimonial__icon {
    /*use absolute positioning to move it to desired location. to do this make the parent element (i.e., card__header) to be relative*/
    position: absolute;
    top: 3rem;
    /*since we have already set the size of icon in .icon-container, correctly position icon in middle by dividing width by 2 (i.e., 64px/2) */
    right: -32px;
}

@media screen and (min-width: 768px) {

    .testimonial .quote, .testimonial .quote__author {
        font-size: 2.4rem;
    }

    .testimonial .quote {
        margin-left: 6rem;
    }
    
}


/*Callouts*/
.callout {
    padding: 4rem;
    border-radius: 5px;
}

.callout--primary {
    background-color: var(--color-primary);
    color: #fff;
}

.callout__content {
    text-align: center;
}

.callout__heading {
    margin-top: 0;
    color: #fff;
    font-size: 3rem;
}

/*buttons in callout component*/
.callout .btn {
    justify-self: center; /*horizontal*/
    align-self: center; /*vertical*/
}

@media screen and (min-width: 768px) {
    .callout .grid--1x2 {
        /*use ato for second column so the second column would be big enough to fit just the button */
        grid-template-columns: 1fr auto;
    }

    .callout__content {
        text-align: left;
    }

    .callout .btn {
        justify-self: start;
        margin: 0 2rem;
    }
}


/*Collapsibles*/
.collapsible__header {
    display: flex;
    /*push items to ends of the container*/
    justify-content: space-between;
}

.collapsible__heading {
    margin-top: 0;
    font-size: 3rem;
}

.collapsible__chevron {
    /*rotate 90 degrees counterclockwise*/
    transform: rotate(-90deg);
}

.collapsible__content {
    max-height: 0;
    opacity: 0;
    overflow: hidden;
    transition: all 0.3s;
}

.collapsible--expanded .collapsible__chevron {
    /*return to original position*/
    transform: rotate(0);
}

.collapsible--expanded .collapsible__content {
    /*display content*/
    max-height: 100vh;
    opacity: 1;
}

/*Blocks*/
    /*represent a block using the SECTION html element*/
.block {
    /*creating a global variable for block elements and all its children*/
    --vertical-padding: 6rem;
    padding: var(--vertical-padding) 2rem;
}

.block__header {
    text-align: center;
    margin-bottom: 4rem;
}

.block__heading {
    margin-top: 0;
}

.block--dark {
    background: #000;
    color: #7b858b;
 
}

/*in block--dark elements, if we have a heading, the block_heading should be styled as follows*/
.block--dark h1, 
.block--dark h2, 
.block--dark h3 {
    color: #fff;
}

.block--skewed-right {
    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 90%);
    /*to have the same padding on top and below after ske*/
    padding-bottom: calc(var(--vertical-padding) + 4rem); 
}

.block--skewed-left {
    clip-path: polygon(0% 0%, 100% 0%, 100% 90%, 0% 100%);
    /*to have the same padding on top and below after ske*/
    padding-bottom: calc(var(--vertical-padding) + 4rem); 
}

.container {
    max-width: 1140px;
    /*0 for vertical margin and auto for horizontal margin*/
    margin: 0 auto;
}


/*Navigation Bars*/
.nav {
    background: #000;
    display: flex;
    /*to push the first and last items to both ends and the remaining space is distributed between other items*/
    justify-content: space-between;
    /*to enable list items to show on second line in mobile version*/
    flex-wrap: wrap;
    padding: 0 1rem;
    align-items: center;
}

.nav__list {
    width: 100%;
    margin: 0;
}

.nav__item {
    padding: 0.5rem 2rem;
    border-bottom: 1px solid #222;
}

.nav__item > a {
    color: #d2d0db;
    transition: color 0.3s;
}

.nav__item > a:hover {
    color: #fff;
}

.nav__toggler {
    opacity: 0.5;
    transition: box-shadow 0.15s;
    cursor: pointer;
}

/*double class selection*/
.nav.collapsible--expanded .nav__toggler {
    opacity: 1;
    box-shadow: 0 0 0  3px #666;
    border-radius: 5px;
}

.nav__brand {
    transform: translateY(5px);
}

@media screen and (min-width: 768px) {

    .nav__toggler {
        display: none;
    }

    .nav__list {
        width: auto;
        display: flex;
        font-size: 1.6rem;
        /*to make the list visible always*/
        max-height: 100%;
        opacity: 1;
    }

    .nav__item {
        border: 0;
    }
}

/*Hero*/

.hero__tagline {
    font-size: 2rem;
    color: #b9c3cf;
    letter-spacing: 1px;
    margin: 2rem 0 5rem;
}

.hero__image {
    width: 100%;
}

@media screen and (min-width: 768px) {

    .hero {
        padding-top: 0;
    }
    
    .hero__content {
        text-align: left;
        /*change vertical alingment of content area to center*/
        align-self: center;
    }
}

/*Domain Blocks*/
.block-domain .input-group {
    box-shadow: 0 0 30px 20px #e6ebee;
    border: 0;
    margin: 4rem auto;
    max-width: 670px;
}

.block-domain__prices {
    color: var(--color-headings);
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, 6rem);
    font-size: 2rem;
    font-weight: 600;
    justify-items: center;
    max-width: 700px;
    margin: 0 auto;
}

@media screen and (min-width: 768px) {
    
    .block-domain__prices {
        /*to automatically calculate even space for all prices to be displayed in a single row*/
        grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
    }
}


/*Plans Block*/
.block-plans .grid {
    gap: 8rem 4rem;
}

.block-plans .card {
    max-width: 500px;
    margin: 0 auto;
}


/*Features & Feature Block*/
.feature {
    gap: 4rem 2rem;
    margin: 12rem 0;
}

.feature:first-of-type {
    margin-top: 6rem;
}

.feature__heading {
    margin: 1rem 0;
}

.feature__image {
    width: 100%;
}

@media screen and (min-width: 768px) {
    /*choosing every second feature*/
    .feature:nth-of-type(even) .feature__content {
        order: 2;
    }
}


/*Showcase Block*/
.block-showcase__image > img {
    width: 100%;
}

@media screen and (min-width: 768px) {

    .block-showcase .grid {
        grid-template-columns: 50% 50%;
    }

    .block-showcase__image {
        justify-self: end;
    }

    .block-showcase__image > img {
        width: auto;
        max-width: 700px;
    }
}


/*Footer*/
.footer {
    background: #232323;
}

.footer a {
    color: #777;
    transition: color .3s;
}

.footer a:hover {
    color: #fff;
}

.footer__section {
    padding: 2rem;
    border-bottom: 1px solid #393939;
}

.footer__section .list {
    margin: 0;
}

.footer__heading {
    text-transform: uppercase;
    font-weight: 600;
}

.footer__brand {
    margin-top: 5rem;
    text-align: center;
}

.footer__brand img {
    /*TODO: consider refactoring this and applying it to all images*/
    width: 100%;
    max-width: 230px;
}

.footer__copyright {
    font-size: 2.1rem;
    color: #fff;
    opacity: 0.3;
}

@media screen and (min-width: 768px) {
    .footer__sections {
        /*use this method for setting grid-template-columns in case we decide later to change the number of olumns needed*/
        grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr) );
    }

    .footer .collapsible__chevron {
        display: none;
    }

    .footer .collapsible__content {
        opacity: 1;
        height: 100%;
        display: contents;
    }

    .footer__brand {
        order: -1;
        margin-top: 1rem;
    }

    .footer__copyright {
        font-size: 1.5rem;
    }

    .footer__section {
        border: 0;
    }

    .footer__heading {
        font-size: 1.6rem;
    }

    .footer__section .list {
        font-size: 1rem;
    }
}
